name: kgo-test

on:
  push:
    tags:
      - v*
    branches:
      - master
      - release
  pull_request:
    branches: [ master ]

jobs:
  lint:
    name: Lint
    strategy:
      matrix:
        go-version: [ 1.16.x, 1.17.x, 1.18.x, 1.19.x ]
        os: [ ubuntu-latest ]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3

      - name: golangci-lint
        uses: golangci/golangci-lint-action@v3
        with:
          version: latest
          args: --issues-exit-code=0 --timeout=10m

  test-unix:
    name: TestUnix
    needs: Lint
    strategy:
      matrix:
        go-version: [ 1.16.x, 1.17.x, 1.18.x, 1.19.x ]
        os: [ ubuntu-latest, macos-latest ]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Install Go
        uses: actions/setup-go@v3
        with:
          go-version: ${{ matrix.go-version }}

      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 1

      - name: Test
        run: go mod vendor && go test -v -mod=mod -race -coverprofile=coverage.txt -covermode=atomic

      - name: Upload coverage to Codecov
        run: bash <(curl -s https://codecov.io/bash)

  test-win:
    name: TestWindows
    needs: Lint
    strategy:
      matrix:
        go-version: [ 1.16.x, 1.17.x, 1.18.x, 1.19.x ]
        os: [ windows-latest ]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Install Go
        uses: actions/setup-go@v3
        with:
          go-version: ${{ matrix.go-version }}

      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 1

      - name: Test
        run: go mod vendor && go test -v -mod=mod -race -coverprofile=coverageout -covermode=atomic

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v1
        with:
          files: coverageout
          flags: unittests
          name: codecov-umbrella
          fail_ci_if_error: false # optional (default = false)
          verbose: true # optional (default = false)
